
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.tsa.holtwinters import ExponentialSmoothing
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
import joblib
import difflib


df = pd.read_csv("/content/drive/MyDrive/cleaned_global_water_consumption.csv")


df.columns = df.columns.str.strip().str.replace("\n", " ").str.replace("\r", " ")

print(" Cleaned Columns in dataset:", df.columns.tolist())


target = "Total water consumption"
matches = difflib.get_close_matches(target, df.columns, n=1, cutoff=0.3)

if matches:
    water_col = matches[0]
else:
    raise KeyError(f" Could not detect column containing '{target}'. Available: {df.columns.tolist()}")

print(f"âœ… Using column for demand: '{water_col}'")


df[water_col] = pd.to_numeric(df[water_col], errors="coerce")
df.dropna(subset=[water_col], inplace=True)


if "Year" in df.columns:
    df["Year"] = pd.to_datetime(df["Year"], format="%Y")
    df.set_index("Year", inplace=True)
else:
    raise KeyError(" No 'Year' column found in dataset.")


train_size = int(len(df) * 0.8)
train, test = df.iloc[:train_size], df.iloc[train_size:]


model = ExponentialSmoothing(train[water_col], trend="add", seasonal=None).fit()
pred = model.forecast(len(test))


mae = mean_absolute_error(test[water_col], pred)
rmse = np.sqrt(mean_squared_error(test[water_col], pred))
r2 = r2_score(test[water_col], pred)

print("\n Model Evaluation Metrics:")
print(f"MAE: {mae:.2f}")
print(f"RMSE: {rmse:.2f}")
print(f"RÂ² Score: {r2:.2f}")


plt.figure(figsize=(10,5))
plt.plot(train.index, train[water_col], label="Train")
plt.plot(test.index, test[water_col], label="Test", color="orange")
plt.plot(test.index, pred, label="Predicted", color="green")
plt.xlabel("Year")
plt.ylabel("Water Demand")
plt.title("Water Demand Forecasting (Holt-Winters)")
plt.legend()
plt.show()

joblib.dump(model, "water_forecast_model.pkl")
print("\n Model saved as water_forecast_model.pkl")


loaded_model = joblib.load("water_forecast_model.pkl")
future_index = pd.date_range(start=df.index[-1] + pd.DateOffset(years=1), periods=10, freq="Y")
future_forecast = pd.Series(loaded_model.forecast(10), index=future_index)

print("\nðŸ”® Future Water Demand Forecast (Next 10 years):")
print(future_forecast)

output:-
![img alt](https://github.com/rajamohanreddi/Water_Demand_Forecasting/blob/1ee36c5daad40f4725b54f871cbd8d6e1b271db0/Screenshot%202025-09-22%20222613.png)










